   private void exec_LINECTRL_ALGO() {
    	
 	   leftMotor.forward();
        rightMotor.forward();
       
        double baseVelocity = 20.0;
        double limitVelocity = 60.0;
        
        kp = 0.08; // Proportional gain
        ki = 0.05; // Integral gain
		kd = 0.08;

        int error = (perception.getRightLineSensorValue()-perception.getLeftLineSensorValue()); // Calculate the error
        integral += error;
        double derivative = error - previousError;        
        
        double correction = kp * error + ki * integral + kd * derivative;
        
        if (correction <= -200 || correction >= 200) {
     	    // Set both motor speeds to baseVelocity
     	    integral = 0;
     	}

        double motorspeedLeft = Math.abs(baseVelocity - correction);
        double motorspeedRight = Math.abs(baseVelocity + correction);
        
        previousError= error; 
        // So the robot does not rotate on its own axis permanently and keeps augmenting the speed infinite; needs limits
        if (motorspeedLeft > limitVelocity) {
        	motorspeedLeft = limitVelocity;
        }
        if (motorspeedRight > limitVelocity) {
        	motorspeedRight = limitVelocity;
        }
        if (motorspeedLeft < baseVelocity) { 
        	motorspeedLeft = baseVelocity;
        }
        if (motorspeedRight < baseVelocity) { 
        	motorspeedRight = baseVelocity;
  }
//        if (error <= - 4|| error >= 4) {
//        		kp = 4.0; // Proportional gain
//        		ki = 0.5; // Integral gain
//        		kd = 2.5;
//       	}
//        	else {
//         kp = 0.08; // Proportional gain
//         ki = 0.05; // Integral gain
//         kd = 1.00; // Derivative gain
//        	}
       
//        Set power of motors
        leftMotor.setPower((int) motorspeedLeft);
        rightMotor.setPower((int) motorspeedRight+3);
        
//        LCD.drawString("kp:" + (kp), 0, 3);
        LCD.drawString("error: " + (error), 0, 4);
//        LCD.drawString("C: " + (correction), 0, 4);
//        LCD.drawString("Error: " + (error), 0, 5);

float locationX= navigation.getPose().getX()*100;
//
if (locationX >= 140) { 
	drive(10,40);
