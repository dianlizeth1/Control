  int leftMotorPower = 0;
	int rightMotorPower = 0;
	
	double velocity = 0.0;
	double angularVelocity = 0.0;
	
	
	
	double integralRight = 0; // Initialize integral for the right wheel outside the loop or method
	double previousErrorRight = 0; // Initialize appropriately for the right wheel
	double integralLeft = 0; // Initialize integral for the left wheel outside the loop or method
	double previousErrorLeft = 0; // Initialize appropriately for the left wheel
	double integral=0;
	double previousError=0;
	
	double kp =0; // Proportional gain
	double ki = 0; // Integral gain
	double kd = 0;
	double integralMotors=0;
	double previousErrorMotors=0;

	double integralRightOmega = 0.0;
	double previousErrorRightOmega = 0.0;
	
	double integralLeftOmega = 0.0;
	double previousErrorLeftOmega = 0.0;
	double errorMotors;
	 //----------------------------------------






leftMotor.forward();
         rightMotor.forward();
        
         double baseVelocity = 40.0;
         double limitVelocity = 100.0;

         // PID Constants
         double kp = 0.08; // Proportional gain
         double ki = 0.00; // Integral gain
         double kd = 0.01; // Derivative gain


         int error = (perception.getRightLineSensorValue()-perception.getLeftLineSensorValue()); // Calculate the error
         integral += error;
         double derivative = error - previousError;        
         
         double correction = kp * error + ki * integral + kd * derivative;
         
         if (correction <= -100 || correction >= 100) {
      	    // Set both motor speeds to baseVelocity
      	    integral = 0;
      	 }

         double motorspeedLeft = Math.abs(baseVelocity - correction);
         double motorspeedRight = Math.abs(baseVelocity + correction);
         
         previousError= error; 
         // So the robot does not rotate on its own axis permanently and keeps augmenting the speed infinite; needs limits
         if (motorspeedLeft > limitVelocity) {
         	motorspeedLeft = limitVelocity;
         }
         if (motorspeedRight > limitVelocity) {
         	motorspeedRight = limitVelocity;
         }
         if (motorspeedLeft < baseVelocity) { 
         	motorspeedLeft = baseVelocity;
         }
         if (motorspeedRight < baseVelocity) { 
         	motorspeedRight = baseVelocity;
         }
         
     	
     	if ((perception.getRightLineSensorValue()>= 90&& perception.getLeftLineSensorValue() >= 90))  {
     			motorspeedLeft=0;
 
      	}
     	
     	
         		
      // Set power of motors
         leftMotor.setPower((int) motorspeedLeft);
         rightMotor.setPower((int) motorspeedRight+3);

    }
   	   
